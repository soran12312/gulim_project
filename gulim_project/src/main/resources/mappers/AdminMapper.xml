<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="project.gulim.dao.AdminDAO">
	
	<!-- 문의사항 리스트 보기 -->
	<select id="listQuestion" resultType="QuestionDTO">
	    select *
	    from question
	    order by question_num DESC
	</select>
		
	<!-- 문의사항 답변하기 -->
	<update id="answerQuestion" parameterType="QuestionDTO">
		UPDATE question SET answer=#{answer}, answer_state=1 WHERE question_num=#{question_num}
	</update>
	
	<!-- 제재 리스트 보기 -->
	<select id="listMember" resultType="MemberDTO">
		select id, nickname, member_state
		from member
	</select>
	
	<!-- 제재 상태 변경 -->
	<update id="changeMemberState" parameterType="MemberDTO">
		update member set member_state=#{member_state} where id=#{id};
	</update>
	
	<!-- 모임장소 리스트 보기 -->
	<select id="listPlace" resultType="PlaceDTO">
	    select *
	    from place
	</select>
	
	<!-- 배송/환불 리스트 보기 -->
	<select id="listRefund" resultType="HashMap">
		SELECT bk.basket_num basket_num, bk.purchase_date purchase_date,
		    CONCAT(b.book_title
			    , IF((SELECT COUNT(*) FROM purchase WHERE basket_num = bk.basket_num) > 1	-- if의 조건문
			    		, CONCAT(' 외 '
			    			, (SELECT COUNT(*) FROM purchase WHERE basket_num = bk.basket_num) - 1
			    			, '권')	-- 조건문이 참일 시
			    , '') -- 조건문이 거짓일 시
			) book_title
		    , bk.id id, bk.delivery_state delivery_state
		    , SUM(b.price) price
		FROM purchase p INNER JOIN book b ON p.book_num = b.book_num
						INNER JOIN basket bk ON p.basket_num = bk.basket_num
		GROUP BY bk.basket_num
		ORDER BY p.purchase_num DESC;
	</select>
	
	<!-- 배송/환불 상태 변경 -->
	<update id="changeDeliveryState" parameterType="BasketDTO">
		update basket set delivery_state=#{delivery_state} where basket_num=#{basket_num}
	</update>
	
	<!-- 관리자 글목록 리스트 보기 -->
	<select id="listPost" resultType="HashMap">
		select p.post_num post_num, p.board board, p.post_title post_title, p.post_state post_state, p.writing_date writing_date, c.start_date start_date, c.end_date end_date
		from post p left outer join contest c on p.contest_num = c.contest_num;
	</select>
	
	<!-- 관리자 글 등록상태 변경 -->
	<update id="changePostState" parameterType="PostDTO">
		update post set post_state=#{post_state} where post_num=#{post_num}
	</update>
	
	<!-- 관리자 글 작성 1 -->
	<insert id="insert_1" parameterType="ContestDTO">
		insert into contest(contest_title, contest_content, start_date, end_date) VALUES(#{contest_title}, #{contest_content}, #{start_date}, #{end_date})
	</insert>
	
	<!-- 관리자 글 작성 2 -->
	<insert id="insert_2" parameterType="PostDTO">
		insert into post(board, subject, contest_num) VALUES(#{board}, #{subject}, #{contest_num})
	</insert>
	
	<!-- 관리자 글 작성 3 -->
	<insert id="insert_3" parameterType="ImageDTO">
		insert into image(origin_img_name, path, img_size, post_num) VALUES(#{origin_img_name}, #{path}, #{img_size}, #{post_num})
	</insert>
	
	<!-- 등록된 상품 리스트 보기 -->
	<select id="listProduct" resultType="HashMap">
		select i.path path, b.book_title book_title, b.sale_state sale_state, b.stock stock
		from book b left outer join image i on b.book_num = i.book_num
	</select>

</mapper>
